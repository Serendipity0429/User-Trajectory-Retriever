# Generated by Django 4.2.20 on 2025-03-13 04:58

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("user_system", "0018_alter_resetpasswordrequest_expire_and_more"),
        ("task_manager", "0003_taskannotation_active"),
    ]

    operations = [
        migrations.CreateModel(
            name="PostTaskAnnotation",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("annotation_status", models.BooleanField(default=False)),
                ("completion_reason", models.CharField(max_length=1000)),
                ("completion_level", models.IntegerField()),
                ("time_condition", models.IntegerField()),
                ("specificity", models.IntegerField()),
                ("trigger", models.IntegerField()),
                ("expertise", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="PreTaskAnnotation",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("annotation_status", models.BooleanField(default=False)),
                ("description", models.CharField(max_length=1000)),
                ("completion_criteria", models.CharField(max_length=1000)),
                ("target_type", models.CharField(max_length=100)),
                ("difficulty", models.IntegerField()),
                ("effort", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("active", models.BooleanField(default=True)),
                ("start_timestamp", models.IntegerField()),
                ("end_timestamp", models.IntegerField()),
                ("need_update_pre_annotation", models.BooleanField()),
                (
                    "post_annotation",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="task_manager.posttaskannotation",
                    ),
                ),
                (
                    "pre_annotation",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pre_annotation",
                        to="task_manager.pretaskannotation",
                    ),
                ),
                (
                    "updated_pre_annotation",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updated_pre_annotation",
                        to="task_manager.pretaskannotation",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="user_system.user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EventAnnotation",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("annotation_status", models.BooleanField(default=False)),
                ("type", models.CharField(max_length=50)),
                ("target", models.CharField(max_length=50)),
                ("timestamp", models.IntegerField()),
                ("detail", models.CharField(max_length=1000)),
                ("is_key_event", models.BooleanField(default=False)),
                (
                    "belong_task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="task_manager.task",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="user_system.user",
                    ),
                ),
            ],
        ),
    ]
